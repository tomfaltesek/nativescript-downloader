
android:
  components:
    - tools
    - platform-tools
    - android-28
    - android-21
    - build-tools-28.0.3
    - extra-android-m2repository
    - sys-img-armeabi-v7a-android-21

install:
    - echo no | npm install -g nativescript
    - tns usage-reporting disable
    - tns error-reporting disable
    - echo no | npm install -g ios-sim

before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
    directories:
        - .nvm
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/

matrix:
  include:
    - stage: "Lint"
      language: node_js
      os: linux
      node_js: "10"
      script: cd src && npm run ci.tslint && cd ../demo && npm run ci.tslint
    - stage: "WebPack"
      os: osx
      env:
        - BuildiOS="12"
        - Xcode="10"
      osx_image: xcode10
      language: node_js
      node_js: "10"
      jdk: oraclejdk8
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
      script: cd demo && npm run build.plugin && npm i && tns build ios --bundle --env.uglify
    - language: android
      os: linux
      env:
         - BuildAndroid="28"
      jdk: oraclejdk8
      before_install: nvm install 10
      script: cd demo && npm run build.plugin && npm i && tns build android --bundle --env.uglify
    - stage: "Tests"
      os: osx
      env:
         - iOS="UnitTests"
      osx_image: xcode10
      language: node_js
      node_js: "10"
      jdk: oraclejdk8
      before_script:
        - ios-sim start --devicetypeid "iPhone-8-Plus, 12.0"
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
      script:
        - cd src && npm i && npm run tsc && npm run tslint && cd ../demo && tns build ios && tns test ios --justlaunch
    - language: android
      os: linux
      env:
         - Android="UnitTests"
      jdk: oraclejdk8
      before_install: nvm install 10
      before_script:
        - echo no | android create avd --force -n test -t android-21 -b armeabi-v7a
        - emulator -avd test -no-audio -no-window &
        - android-wait-for-emulator
      script:
        - cd src && npm i && npm run tsc && npm run tslint && cd ../demo && tns build android
        - travis_wait travis_retry tns test android --justlaunch
    - stage: "Build"
      env:
         - BuildAndroid="28"
      language: android
      os: linux
      jdk: oraclejdk8
      before_install: nvm install 10
      script:
        - cd src && npm i && npm run tsc && cd ../demo && tns build android
    - os: osx
      env:
        - BuildiOS="12"
        - Xcode="10"
      osx_image: xcode10
      language: node_js
      node_js: "10"
      jdk: oraclejdk8
      before_install:
        - pip install --upgrade pip
        - pip install --user --upgrade matplotlib
        - pip install six
      script:
        - cd src && npm i && npm run tsc && cd ../demo && tns build ios
